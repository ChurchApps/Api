name: Deploy Production

on:
  workflow_dispatch:

env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}

jobs:
  pre-deployment-checks:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive tests
        run: |
          npm run lint:check
          npm run tsc
          echo "All pre-deployment checks passed"

      - name: Security audit
        run: |
          npm audit --audit-level=high
          echo "Security audit completed"

      - name: Build verification
        run: |
          npm run build
          npm run build-layer
          echo "Build verification completed"

  deploy:
    name: Deploy Production
    runs-on: ubuntu-latest
    environment: production
    needs: [pre-deployment-checks]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Prepare Lambda Layer
        run: npm run build-layer

      - name: Create deployment backup point
        run: |
          echo "Creating backup point for production deployment..."
          # Get current deployment info before deploying
          npx serverless info --stage prod > deployment-backup.txt || echo "No existing deployment found"

      - name: Deploy Core APIs to Production
        run: |
          echo "ðŸš€ Starting production deployment..."
          npx serverless deploy --stage prod --verbose --force
          echo "âœ… Production deployment completed"

      - name: Verify deployment
        run: |
          echo "Verifying production deployment..."
          npx serverless info --stage prod

      - name: Post-deployment verification
        run: |
          # Wait for deployment to stabilize
          sleep 30

          echo "Running post-deployment health checks..."
          # Test core endpoints
          curl -f https://api.churchapps.org/health
          echo "Production health check passed"

      - name: Package deployment artifacts
        run: |
          npx serverless package --stage prod
          ls -R .serverless
